{"version":3,"sources":["components/NewTodo.module.css","components/TodoItem.module.css","components/Todos.module.css","models/todo.ts","store/todos-context.tsx","components/NewTodo.tsx","components/TodoItem.tsx","components/Todos.tsx","App.tsx","index.tsx"],"names":["module","exports","Todo","todoText","id","text","this","Date","toISOString","TodosContext","React","createContext","items","addTodo","removeTodo","TodosContextProvider","props","useState","todos","setTodos","contextValue","newTodo","prevTodos","concat","todoId","filter","todo","Provider","value","children","NewTodo","setTodo","todosCtx","useContext","onSubmit","event","preventDefault","trim","length","className","classes","form","htmlFor","type","onChange","e","target","TodoItem","item","onClick","onRemoveTodo","Todos","map","bind","App","ReactDOM","render","document","getElementById"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,KAAO,wB,gBCAzBD,EAAOC,QAAU,CAAC,KAAO,yB,gBCAzBD,EAAOC,QAAU,CAAC,MAAQ,uB,qHCSXC,EANb,WAAYC,GAAmB,yBAH/BC,QAG8B,OAF9BC,UAE8B,EAC5BC,KAAKD,KAAOF,EACZG,KAAKF,IAAK,IAAIG,MAAOC,e,OCKZC,EAAcC,IAAMC,cAA+B,CAG9DC,MAAO,GACPC,QAAS,SAACR,KACVS,WAAY,SAACV,OAmCCW,EAhCuB,SAACC,GAGtC,MAA0BC,mBAAiB,IAA3C,mBAAOC,EAAP,KAAcC,EAAd,KAgBMC,EAAgC,CACpCR,MAAOM,EACPL,QAhBqB,SAACV,GACtB,IAAMkB,EAAU,IAAInB,EAAKC,GAEzBgB,GAAS,SAACG,GACR,OAAOA,EAAUC,OAAOF,OAa1BP,WATwB,SAACU,GACzBL,GAAS,SAACG,GACR,OAAOA,EAAUG,QAAO,SAACC,GAAD,OAAUA,EAAKtB,KAAOoB,UAUlD,OACE,cAACf,EAAakB,SAAd,CAAuBC,MAAOR,EAA9B,SACGJ,EAAMa,Y,gBCIEC,EA7CW,WAC1B,MAAwBb,mBAAS,IAAjC,mBAAOS,EAAP,KAAaK,EAAb,KAQMC,EAAWC,qBAAWxB,GA0B1B,OACE,uBAAMyB,SA1BY,SAACC,GACnBA,EAAMC,iBAaqB,IAAvBV,EAAKW,OAAOC,SAKhBN,EAASnB,QAAQa,GACjBK,EAAQ,MAMuBQ,UAAWC,IAAQC,KAAlD,UAEQ,uBAAOC,QAAQ,OAAf,wCACN,uBAAOC,KAAK,OAAOvC,GAAG,OAAOwB,MAAOF,EAAMkB,SApC3B,SAACC,GAErB,OAAQd,EAAQc,EAAEC,OAAOlB,UAmCpB,kD,gBCjCSmB,EAVwD,SACrE/B,GAEA,OACE,oBAAIuB,UAAWC,IAAQQ,KAAMC,QAASjC,EAAMkC,aAA5C,SACGlC,EAAMX,Q,gBCeE8C,EAhBS,WACtB,IAAMnB,EAAWC,qBAAWxB,GAE5B,OACE,oBAAI8B,UAAWC,IAAQtB,MAAvB,SACGc,EAASpB,MAAMwC,KAAI,SAACJ,GAAD,OAClB,cAAC,EAAD,CAEE3C,KAAM2C,EAAK3C,KACX6C,aAAclB,EAASlB,WAAWuC,KAAK,KAAML,EAAK5C,KAF7C4C,EAAK5C,UCALkD,MATf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QCFNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.74d9b142.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewTodo_form__tQjZB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__3hnXI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todos\":\"Todos_todos__DVDy6\"};","class Todo {\n  id: string;\n  text: string;\n\n  constructor(todoText: string) {\n    this.text = todoText;\n    this.id = new Date().toISOString();\n  }\n}\n\nexport default Todo;","import React, { useState } from 'react';\n\nimport Todo from '../models/todo';\n\ntype TodosContextObj = {\n  items: Todo[];\n  addTodo: (text: string) => void;\n  removeTodo: (id: string) => void;\n};\n\n// we eksporting TodoContext, why? apparently we need that for  use context later\nexport const TodosContext= React.createContext<TodosContextObj>({\n  // this is just pure JS her yet decribing function is somewhat new\n  // like why there is nothing there in curly brackets\n  items: [],\n  addTodo: (text:string) => {},\n  removeTodo: (id: string) => {},\n});\n\nconst TodosContextProvider: React.FC = (props) => {\n  // we only have props.children and they default and therfore\n  // no need to define them here: React.FC<no need>\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  const addTodoHandler = (todoText: string) => {\n    const newTodo = new Todo(todoText);\n\n    setTodos((prevTodos) => {\n      return prevTodos.concat(newTodo);\n    });\n  };\n\n  const removeTodoHandler = (todoId: string) => {\n    setTodos((prevTodos) => {\n      return prevTodos.filter((todo) => todo.id !== todoId);\n    });\n  };\n\n  const contextValue: TodosContextObj = {\n    items: todos,\n    addTodo: addTodoHandler,\n    removeTodo: removeTodoHandler,\n  };\n\n  return (\n    <TodosContext.Provider value={contextValue}>\n      {props.children}\n    </TodosContext.Provider>\n  );\n};\n\n export default TodosContextProvider;","import React, { useContext, useState, ReactEventHandler } from 'react';\n\nimport { TodosContext } from '../store/todos-context';\nimport classes from './NewTodo.module.css';\n\nconst NewTodo: React.FC = () => {\nconst [todo, setTodo] = useState(\"\")\n\nconst handleChange = (e: React.ChangeEvent<HTMLInputElement>)=>\n{\n return  setTodo(e.target.value);\n};\n\n\nconst todosCtx = useContext(TodosContext);\nconst submitHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n\n  \n\n    // something I missing here, the check for the value entered\n    // is only here so it means that the possobility of it being zero\n    // which basucally is nul exist up to this pointso it must have passed \n    // the code above where exclamation mark prevents the value from being\n    // null, \n    // unless that prevents empty spaceces which tehnicalyy are not null\n    // and what acually prevents that value from being null is the <form>\n    // itself \n\n    if (todo.trim().length === 0) {\n      // throw an error\n      return;\n    }\n\n    todosCtx.addTodo(todo);\n    setTodo(\"\")\n    \n    \n  };\n\n  return (\n    <form onSubmit={submitHandler} className={classes.form}>\n      {/* <form className={classes.form}> */}\n            <label htmlFor='text'>Todo in React & TypeScript</label>\n      <input type='text' id='text' value={todo} onChange={handleChange} />\n      <button>Add Todo</button>\n    </form>\n  );\n};\n\nexport default NewTodo;\n","import classes from './TodoItem.module.css';\n\nconst TodoItem: React.FC<{ text: string; onRemoveTodo: () => void }> = (\n  props\n) => {\n  return (\n    <li className={classes.item} onClick={props.onRemoveTodo}>\n      {props.text}\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import React, { useContext } from 'react';\n\nimport TodoItem from './TodoItem';\nimport { TodosContext } from '../store/todos-context';\nimport classes from './Todos.module.css';\n\nconst Todos: React.FC = () => {\n  const todosCtx = useContext(TodosContext);\n\n  return (\n    <ul className={classes.todos}>\n      {todosCtx.items.map((item) => (\n        <TodoItem\n          key={item.id}\n          text={item.text}\n          onRemoveTodo={todosCtx.removeTodo.bind(null, item.id)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default Todos;\n","import NewTodo from './components/NewTodo';\nimport Todos from './components/Todos';\nimport TodosContextProvider from './store/todos-context';\n\nfunction App (){\n  return (\n    <TodosContextProvider>\n      <NewTodo />\n      <Todos />\n    </TodosContextProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}